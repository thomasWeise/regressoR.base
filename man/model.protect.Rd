% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protect.R
\name{model.protect}
\alias{model.protect}
\title{Protected a Fitted Model from Producing Non-Finite Results}
\usage{
model.protect(f, x, y)
}
\arguments{
\item{f}{the trained model}

\item{x}{the \code{x} coordinates on which the model was trained}

\item{y}{the \code{y} coordinates on which the model was trained}
}
\value{
a new model function which can be as drop-in replacement for \code{f}
  and will produce the same results as \code{f} for all inputs where \code{f}
  has finite results \emph{and} finite output results where \code{f} does
  yield non-finite results.
}
\description{
This function can protect a model which was trained on a certain
  metric against non-finite results. The idea is that we use the model
  directly for any situation where the results are finite. When they are not
  finite, we try to extrapolate the model values linearly between the two
  closest finite results. If we fail in doing so, we simply extrapolate
  results from the \code{x-y} data directly.

  Using protected models may be useful if a model function \code{f} includes,
  e.g., a log-scaled \code{x}-axis and is fed with an x-coordinate where the
  log would receive a zero or negative parameter.

  \emph{Notice:} This function and using the produced model may lead to many
  warnings.
}
